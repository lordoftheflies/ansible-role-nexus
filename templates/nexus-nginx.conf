#
# Nexus Nginx Configuration
#

# Redirect all HTTP to HTTPS *except* the ACME challenges (Let's Encrypt TLS certificate
# domain validation challenges) path, which must be served over HTTP per the ACME spec
# (due to some Apache vulnerability).
server {
  listen 80;
  listen [::]:80;

  server_name {{ public_hostname }};
  root /tmp/invalid-path-nothing-here;

  # Improve privacy: Hide version an OS information on
  # error pages and in the "Server" HTTP-Header.
  server_tokens off;

  location / {
    # Redirect using the 'return' directive and the built-in
    # variable '$request_uri' to avoid any capturing, matching
    # or evaluation of regular expressions.
    return 301 https://{{ public_hostname }}$request_uri;
  }

  location /.well-known/acme-challenge/ {
    # This path must be served over HTTP for ACME domain validation.
    # We map this to a special path where our TLS cert provisioning
    # tool knows to store challenge response files.
    alias /home/user-data/ssl/lets_encrypt/acme_challenges/;
  }
}

# The secure HTTPS server.
server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name {{ public_hostname }};
  client_max_body_size 20M;

  # Improve privacy: Hide version an OS information on
  # error pages and in the "Server" HTTP-Header.
  server_tokens off;


  # Expose this directory as static files.
  root /home/user-data/www/default;
  index index.html index.htm;

  location = /robots.txt {
    log_not_found off;
    access_log off;
  }

  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  # Proxy configuration.
  location / {
    proxy_pass http://127.0.0.1:{{ nexus_default_port }}/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  add_header Strict-Transport-Security max-age=31536000;

  # Disable viewing dotfiles (.htaccess, .svn, .git, etc.)
  # This block is placed at the end. Nginx's precedence rules means this block
  # takes precedence over all non-regex matches and only regex matches that
  # come after it (i.e. none of those, since this is the last one.) That means
  # we're blocking dotfiles in the static hosted sites but not the FastCGI-
  # handled locations for Nextcloud (which serves user-uploaded files that might
  # have this pattern, see #414) or some of the other services.
  location ~ /\.(ht|svn|git|hg|bzr) {
    log_not_found off;
    access_log off;
    deny all;
  }
}